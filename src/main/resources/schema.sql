CREATE TABLE IF NOT EXISTS GENRE
(
    GENRE_ID   int auto_increment primary key,
    GENRE_NAME varchar(20) not null
);

CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID   int auto_increment primary key,
    MPA_NAME varchar(6) not null
);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   int generated by default as identity primary key,
    EMAIL     varchar(50) not null,
    LOGIN     varchar(20) not null,
    USER_NAME varchar(50),
    BIRTHDAY  date        not null
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      int generated by default as identity primary key,
    FILM_NAME    varchar(100) not null,
    DESCRIPTION  varchar(200) not null,
    RELEASE_DATE date         not null,
    DURATION     int          not null,
    MPA_ID       int,
    constraint "fk_mpa_id"
        foreign key (MPA_ID) references MPA (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   int         not null,
    FRIEND_ID int         not null,
    STATUS    varchar(20) not null,
    constraint "friends_pk"
        PRIMARY KEY (USER_ID, FRIEND_ID),
    constraint "friends_user_id"
        FOREIGN KEY (USER_ID)
            REFERENCES USERS (USER_ID),
    constraint "friends_friend_id"
        FOREIGN KEY (FRIEND_ID)
            REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    FILM_ID int not null,
    USER_ID int not null,
    constraint "films_likes"
        PRIMARY KEY (FILM_ID, USER_ID),
    constraint "films_likes_film_id"
        FOREIGN KEY (FILM_ID)
            REFERENCES FILMS (FILM_ID),
    constraint "films_likes_user_id"
        FOREIGN KEY (USER_ID)
            REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    FILM_ID  int not null,
    GENRE_ID int not null,
    constraint "film_genre"
        PRIMARY KEY (FILM_ID, GENRE_ID),
    constraint "film_genre_film_id"
        FOREIGN KEY (FILM_ID)
            REFERENCES FILMS (FILM_ID),
    constraint "film_genre_genre_id"
        FOREIGN KEY (GENRE_ID)
            REFERENCES GENRE (GENRE_ID)
);
